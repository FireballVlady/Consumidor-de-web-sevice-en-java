/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package consumer;

/**
 *
 * @author f_gar
 */

import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;
import consumer.clases.webservice;
import java.io.IOException;
import java.net.HttpURLConnection;
import java.net.URI;
import java.net.URL;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;
import java.util.List;
import java.util.Scanner;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;



public class Listado_alumnos extends javax.swing.JFrame {
//    private AlumnoListener alumnoListener;
//    /**
//     * Creates new form Listado_aspirantes
//     */
//    public void setAlumnoListener(AlumnoListener listener) {
//        this.alumnoListener = listener;
//    } 
    
  
    private String Nestor = "http://localhost/Nestor/index.php";

    DefaultTableModel modeloweb;
    ObjectMapper mapper = new ObjectMapper();
    
    private Integer matricula;   
    private String nombre;

    
    
    public Listado_alumnos() {
        initComponents();
        modeloweb = (DefaultTableModel)jTable1.getModel();
        mostrar();     
    
        
    }
    
     private void mostrar(){
      try {
            URL url = new URL("http://localhost/Nestor/index.php");
            HttpURLConnection conn = (HttpURLConnection) url.openConnection();
            conn.setRequestMethod("GET");
            conn.connect();
            int responsecode = conn.getResponseCode();

            if (responsecode != 200) {
                throw new RuntimeException("Ocurrio un error " + responsecode);
            } else {
                StringBuilder informationString = new StringBuilder();

                try (Scanner scanner = new Scanner(url.openStream())) {
                    while (scanner.hasNext()) {
                        informationString.append(scanner.nextLine());
                    }
                }
                System.out.println("JSON recibido:");
                System.out.println(informationString);
              

            List<webservice> webList = getData(informationString.toString(), new TypeReference<List<webservice>>() {
            });
              modeloweb.setRowCount(0);
          for (webservice webservices : webList) {
               Object datos[] = { webservices.getMatricula(),webservices.getNombre(), webservices.getA_paterno(),webservices.getA_materno(),
               webservices.getNum_tel(),webservices.getCorreo_electronico(),webservices.getGeneracion(),webservices.getCarrera(),
               webservices.getGrupo(),webservices.getGrado()};
               modeloweb.addRow(datos);
               
                }

            
      }
    }catch(IOException | RuntimeException e)
    {
        e.printStackTrace();
    }

    }
        private <T> T getData(String json, TypeReference<T> referencia) {
        try {
            return mapper.readValue(json, referencia);
        } catch (Exception e) {
            e.printStackTrace();
           
        }
        return null;
    }
    
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btn_agregar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btn_Eliminar = new javax.swing.JButton();
        btn_editar = new javax.swing.JButton();
        txt_nombre = new javax.swing.JTextField();
        txt_ap = new javax.swing.JTextField();
        txt_am = new javax.swing.JTextField();
        txt_numtelefonico = new javax.swing.JTextField();
        txt_correo = new javax.swing.JTextField();
        txt_generacion = new javax.swing.JTextField();
        txt_carrera = new javax.swing.JTextField();
        txt_grupo = new javax.swing.JTextField();
        txt_grado = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        btn_buscar = new javax.swing.JButton();
        txt_buscar = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Matricula", "Nombre", "A_Paterno", "A_Materno", "Num_Telefono", "Correo", "Generacion", "Carrera", "Grado", "Grupo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        btn_agregar.setText("Agregar");
        btn_agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_agregarActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(102, 204, 255));

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 2, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Listado de Aspirantes");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btn_Eliminar.setText("Eliminar");
        btn_Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_EliminarActionPerformed(evt);
            }
        });

        btn_editar.setText("Editar");
        btn_editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editarActionPerformed(evt);
            }
        });

        txt_nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_nombreActionPerformed(evt);
            }
        });

        txt_am.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_amActionPerformed(evt);
            }
        });

        txt_generacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_generacionActionPerformed(evt);
            }
        });

        jLabel2.setText("Nombre");

        jLabel3.setText("A_paterno");

        jLabel4.setText("A_materno");

        jLabel5.setText("Num_Telefono");

        jLabel6.setText("Correo");

        jLabel7.setText("Generacion");

        jLabel8.setText("Carrera");

        jLabel9.setText("Grupo");

        jLabel10.setText("Grado");

        btn_buscar.setText("Buscar");
        btn_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addComponent(btn_buscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_editar, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_Eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_agregar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 889, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_carrera, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                    .addComponent(txt_generacion)
                    .addComponent(txt_correo)
                    .addComponent(txt_numtelefonico)
                    .addComponent(txt_am)
                    .addComponent(txt_ap)
                    .addComponent(txt_nombre)
                    .addComponent(txt_grado)
                    .addComponent(txt_grupo))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_editar)
                    .addComponent(btn_Eliminar)
                    .addComponent(btn_agregar)
                    .addComponent(btn_buscar)
                    .addComponent(txt_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_ap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_am, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_numtelefonico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addComponent(jLabel6)
                        .addGap(1, 1, 1)
                        .addComponent(txt_correo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_generacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)
                        .addGap(2, 2, 2)
                        .addComponent(txt_carrera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_grado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_grupo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_agregarActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        Insertar_alumnos a = new Insertar_alumnos();
        a.setVisible(true);
    }//GEN-LAST:event_btn_agregarActionPerformed

    private void btn_EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_EliminarActionPerformed
        // TODO add your handling code here:

   if (jTable1.getSelectedRow() >= 0) {
        int confirmacion = JOptionPane.showConfirmDialog(
            this, "¿Estás seguro de que quieres eliminar este alumno?", 
            "Confirmación de eliminación", JOptionPane.YES_NO_OPTION);
        Integer fila = jTable1.getSelectedRow();
        Integer matricula = Integer.parseInt(jTable1.getValueAt(fila, 0).toString());
           if (confirmacion == JOptionPane.YES_OPTION) {
           
        String url = Nestor + "?matricula=" + matricula;
        HttpClient cliente = HttpClient.newBuilder().version(HttpClient.Version.HTTP_2).build();
        HttpRequest request = HttpRequest.newBuilder()
                .DELETE()
                .uri(URI.create(url))
                .build();

        try {
            HttpResponse<String> respuesta = cliente.send(request, HttpResponse.BodyHandlers.ofString());

            if (respuesta.statusCode() == 200 && respuesta.body().equals("Correcto")) {
                JOptionPane.showMessageDialog(null, "El alumno se eliminó correctamente.");
                modeloweb.removeRow(fila);
               // Eliminar la fila de la tabla localmente.
            } else {
                JOptionPane.showMessageDialog(null, "El alumno se eliminó correctamente.");
                modeloweb.removeRow(fila);
                mostrar();
            }
        

        } catch (IOException | InterruptedException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error al enviar la solicitud DELETE.", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
           }
          
    } else {
        JOptionPane.showMessageDialog(null, "Selecciona un alumno a eliminar.", "ERROR", JOptionPane.ERROR_MESSAGE);
    }
        
    }//GEN-LAST:event_btn_EliminarActionPerformed
  
    
    private void btn_editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editarActionPerformed
        // TODO add your handling code here:
//   this.setVisible(false);
//        Editar_alumno E = new Editar_alumno();
//        E.setVisible(true); 
//

if (jTable1.getSelectedRow() >= 0) {
    Integer fila = jTable1.getSelectedRow();
    Integer matricula = Integer.parseInt(jTable1.getValueAt(fila, 0).toString());
    String nombre = txt_nombre.getText();
    String a_paterno = txt_ap.getText();
    String a_materno = txt_am.getText();
    String num_telefono = txt_numtelefonico.getText();
    String correo = txt_correo.getText();
    String generacion = txt_generacion.getText();
    String carrera = txt_carrera.getText();
    String grupo = txt_grupo.getText();
    String grado = txt_grado.getText();
//     objcrud.actualizar(var.getmatricula_mate(), var.getnombre_mate(), var.getap_mate(), var.getUnidad_medidad_mate(), var.getPrecio_mate(), var.getNoSerie_mate(), var.getNoControl_mate(), var.getEstado_mate(), var.getcBarras_mate(), var.getUbicacion_mate(), var.getObservaciones_mate(), var.getFactura_mate());
    
    String url = Nestor + "?matricula="+ matricula + "&nombre=" + nombre + "&a_paterno=" + a_paterno + "&a_materno=" + a_materno + "&num_tel=" + num_telefono + "&correo_electronico=" + correo + "&generacion=" + generacion + "&carrera=" + carrera + "&grupo=" + grupo + "&grado=" + grado;
    HttpClient cliente = HttpClient.newBuilder().version(HttpClient.Version.HTTP_2).build();
    HttpRequest request = HttpRequest.newBuilder()
            .PUT(HttpRequest.BodyPublishers.noBody())
            .uri(URI.create(url))
            .build();

    try {
        HttpResponse<String> respuesta = cliente.send(request, HttpResponse.BodyHandlers.ofString());

        if (respuesta.statusCode() == 200 && respuesta.body().equals("Correcto")) {
            JOptionPane.showMessageDialog(null, "El alumno se actualizó correctamente.");
            // Realiza las operaciones necesarias después de la actualización exitosa.
        } else {
            JOptionPane.showMessageDialog(null, "El alumno se actualizó correctamente.");
            modeloweb.removeRow(fila);
                mostrar();
        
        txt_nombre.setText("");
        txt_ap.setText("");
        txt_am.setText("");
        txt_numtelefonico.setText("");
        txt_correo.setText("");
        txt_generacion.setText("");
        txt_carrera.setText("");
        txt_grupo.setText("");
        txt_grado.setText("");
        }

    } catch (IOException | InterruptedException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(null, "Error al enviar la solicitud PUT.", "ERROR", JOptionPane.ERROR_MESSAGE);
    }
} else {
    JOptionPane.showMessageDialog(null, "Selecciona un alumno para actualizar.", "ERROR", JOptionPane.ERROR_MESSAGE);
}
if (jTable1.getSelectedRowCount() != 1){
    return;
}
String nombre = txt_nombre.getText();
String a_paterno = txt_ap.getText();
String a_materno = txt_am.getText();
String num_telefono = txt_numtelefonico.getText();
String correo = txt_correo.getText();
String generacion = txt_generacion.getText();
String carrera = txt_carrera.getText();
String grupo = txt_grupo.getText();
String grado = txt_grado.getText();

    }//GEN-LAST:event_btn_editarActionPerformed
      
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:if (jTable1.getSelectedRow() >= 0) {
        Integer fila = jTable1.getSelectedRow();
        String nombre = (String) jTable1.getValueAt(fila, 1);
        String a_paterno = (String) jTable1.getValueAt(fila, 2);
        String a_materno = (String) jTable1.getValueAt(fila, 3);
        String num_telefono = (String) jTable1.getValueAt(fila, 4);
        String correo = (String) jTable1.getValueAt(fila, 5);
        String generacion = (String) jTable1.getValueAt(fila, 6);
        String carrera = (String) jTable1.getValueAt(fila, 7);
        String grupo = (String) jTable1.getValueAt(fila, 9);
        String grado = (String) jTable1.getValueAt(fila, 8);
        
        
        txt_nombre.setText(nombre);
        txt_ap.setText(a_paterno);
        txt_am.setText(a_materno);
        txt_numtelefonico.setText(num_telefono);
        txt_correo.setText(correo);
        txt_generacion.setText(generacion);
        txt_carrera.setText(carrera);
        txt_grupo.setText(grupo);
        txt_grado.setText(grado);
//        matricula = Integer.valueOf(jTable1.getValueAt(fila, 0).toString());
        
//        String matriculaStr = jTable1.getValueAt(fila, 0).toString();
//if (matriculaStr.matches("\\d+")) {
//    matricula = Integer.parseInt(matriculaStr);
//} else {
//    // Muestra un mensaje de error o realiza otra acción adecuada en caso de que la matrícula no sea un número.
//}
    }//GEN-LAST:event_jTable1MouseClicked

    private void txt_generacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_generacionActionPerformed
        // TODO add your handling code here:
        if (jTable1.getSelectedRow() >= 0) {
    Integer fila = jTable1.getSelectedRow();     
    } 
    }//GEN-LAST:event_txt_generacionActionPerformed

    private void txt_amActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_amActionPerformed
        // TODO add your handling code here:
        if (jTable1.getSelectedRow() >= 0) {
    Integer fila = jTable1.getSelectedRow();   
    
    } 
    }//GEN-LAST:event_txt_amActionPerformed

    private void txt_nombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_nombreActionPerformed
        // TODO add your handling code here:
        if (jTable1.getSelectedRow() >= 0) {
    Integer fila = jTable1.getSelectedRow();   
    
    }//GEN-LAST:event_txt_nombreActionPerformed
}
    private void btn_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscarActionPerformed
        // TODO add your handling code here:
    
          try {
                 String matricula2 = txt_buscar.getText() ;
             URL url = new URL("http://localhost/Nestor/index.php?matricula="+ matricula2);
            HttpURLConnection conn = (HttpURLConnection) url.openConnection();
            conn.setRequestMethod("GET");
            conn.connect();
            int responsecode = conn.getResponseCode();

            if (responsecode != 200) {
                throw new RuntimeException("Ocurrio un error " + responsecode);
            } else {
                StringBuilder informationString = new StringBuilder();

                try (Scanner scanner = new Scanner(url.openStream())) {
                    while (scanner.hasNext()) {
                        informationString.append(scanner.nextLine());
                    }
                }
                System.out.println("JSON recibido:");
                System.out.println(informationString);
              

            List<webservice> webList = getData(informationString.toString(), new TypeReference<List<webservice>>() {
            });
              modeloweb.setRowCount(0);
          for (webservice webservices : webList) {
               Object datos[] = { webservices.getMatricula(),webservices.getNombre(), webservices.getA_paterno(),webservices.getA_materno(),
               webservices.getNum_tel(),webservices.getCorreo_electronico(),webservices.getGeneracion(),webservices.getCarrera(),
               webservices.getGrado(),webservices.getGrupo()};
               modeloweb.addRow(datos);
               
                }

            
      }
    }catch(IOException | RuntimeException e)
    {
        e.printStackTrace();
    }

    
    }//GEN-LAST:event_btn_buscarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Listado_alumnos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Listado_alumnos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Listado_alumnos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Listado_alumnos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Listado_alumnos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Eliminar;
    private javax.swing.JButton btn_agregar;
    private javax.swing.JButton btn_buscar;
    private javax.swing.JButton btn_editar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txt_am;
    private javax.swing.JTextField txt_ap;
    private javax.swing.JTextField txt_buscar;
    private javax.swing.JTextField txt_carrera;
    private javax.swing.JTextField txt_correo;
    private javax.swing.JTextField txt_generacion;
    private javax.swing.JTextField txt_grado;
    private javax.swing.JTextField txt_grupo;
    private javax.swing.JTextField txt_nombre;
    private javax.swing.JTextField txt_numtelefonico;
    // End of variables declaration//GEN-END:variables
}
